/*
 * OriginStamp Client
 *
 * OpenAPI spec version: 3.0
 * OriginStamp Documentation: https://docs.originstamp.com
 * Contact: mail@originstamp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


package com.originstamp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DTO object for notifications.
 */
@ApiModel(description = "DTO object for notifications.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-18T14:06:09.411+01:00")
public class Notification {
  @SerializedName("currency")
  private Integer currency = null;

  @SerializedName("notification_type")
  private Integer notificationType = null;

  @SerializedName("target")
  private String target = null;

  public Notification currency(Integer currency) {
    this.currency = currency;
    return this;
  }

   /**
   * 0: Bitcoin
   * @return currency
  **/
  @ApiModelProperty(example = "0", required = true, value = "0: Bitcoin")
  public Integer getCurrency() {
    return currency;
  }

  public void setCurrency(Integer currency) {
    this.currency = currency;
  }

  public Notification notificationType(Integer notificationType) {
    this.notificationType = notificationType;
    return this;
  }

   /**
   * 0: notify via email  1: notify a webhook
   * @return notificationType
  **/
  @ApiModelProperty(example = "0", required = true, value = "0: notify via email  1: notify a webhook")
  public Integer getNotificationType() {
    return notificationType;
  }

  public void setNotificationType(Integer notificationType) {
    this.notificationType = notificationType;
  }

  public Notification target(String target) {
    this.target = target;
    return this;
  }

   /**
   * Depending on the notification type, specify the target for the notification (e.g. mail address or webhook URL). The webhook URL will receive a POST request after timestamp was successfully created.
   * @return target
  **/
  @ApiModelProperty(example = "originstamp@trashmail.com", required = true, value = "Depending on the notification type, specify the target for the notification (e.g. mail address or webhook URL). The webhook URL will receive a POST request after timestamp was successfully created.")
  public String getTarget() {
    return target;
  }

  public void setTarget(String target) {
    this.target = target;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notification notification = (Notification) o;
    return Objects.equals(this.currency, notification.currency) &&
        Objects.equals(this.notificationType, notification.notificationType) &&
        Objects.equals(this.target, notification.target);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, notificationType, target);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notification {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

