/*
 * OriginStamp Client
 *
 * OpenAPI spec version: 3.0
 * OriginStamp Documentation: https://docs.originstamp.com
 * Contact: mail@originstamp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


package com.originstamp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Usage metric for this month.
 */
@ApiModel(description = "Usage metric for this month.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-18T14:06:09.411+01:00")
public class UsageResponse {
  @SerializedName("certificate_per_month")
  private Long certificatePerMonth = null;

  @SerializedName("consumed_certificates")
  private Long consumedCertificates = null;

  @SerializedName("consumed_credits")
  private BigDecimal consumedCredits = null;

  @SerializedName("consumed_timestamps")
  private Long consumedTimestamps = null;

  @SerializedName("credits_per_month")
  private BigDecimal creditsPerMonth = null;

  @SerializedName("limitation_type")
  private Integer limitationType = null;

  @SerializedName("remaining_credits")
  private BigDecimal remainingCredits = null;

  @SerializedName("timestamps_per_month")
  private Long timestampsPerMonth = null;

  public UsageResponse certificatePerMonth(Long certificatePerMonth) {
    this.certificatePerMonth = certificatePerMonth;
    return this;
  }

   /**
   * Total number of certificates available per month.
   * @return certificatePerMonth
  **/
  @ApiModelProperty(value = "Total number of certificates available per month.")
  public Long getCertificatePerMonth() {
    return certificatePerMonth;
  }

  public void setCertificatePerMonth(Long certificatePerMonth) {
    this.certificatePerMonth = certificatePerMonth;
  }

  public UsageResponse consumedCertificates(Long consumedCertificates) {
    this.consumedCertificates = consumedCertificates;
    return this;
  }

   /**
   * Number of certificates requested for the current month.
   * @return consumedCertificates
  **/
  @ApiModelProperty(value = "Number of certificates requested for the current month.")
  public Long getConsumedCertificates() {
    return consumedCertificates;
  }

  public void setConsumedCertificates(Long consumedCertificates) {
    this.consumedCertificates = consumedCertificates;
  }

  public UsageResponse consumedCredits(BigDecimal consumedCredits) {
    this.consumedCredits = consumedCredits;
    return this;
  }

   /**
   * Number of used credits for the current month.
   * @return consumedCredits
  **/
  @ApiModelProperty(value = "Number of used credits for the current month.")
  public BigDecimal getConsumedCredits() {
    return consumedCredits;
  }

  public void setConsumedCredits(BigDecimal consumedCredits) {
    this.consumedCredits = consumedCredits;
  }

  public UsageResponse consumedTimestamps(Long consumedTimestamps) {
    this.consumedTimestamps = consumedTimestamps;
    return this;
  }

   /**
   * Number of timestamps created for the current month.
   * @return consumedTimestamps
  **/
  @ApiModelProperty(value = "Number of timestamps created for the current month.")
  public Long getConsumedTimestamps() {
    return consumedTimestamps;
  }

  public void setConsumedTimestamps(Long consumedTimestamps) {
    this.consumedTimestamps = consumedTimestamps;
  }

  public UsageResponse creditsPerMonth(BigDecimal creditsPerMonth) {
    this.creditsPerMonth = creditsPerMonth;
    return this;
  }

   /**
   * Represents the total number of credits per month.
   * @return creditsPerMonth
  **/
  @ApiModelProperty(value = "Represents the total number of credits per month.")
  public BigDecimal getCreditsPerMonth() {
    return creditsPerMonth;
  }

  public void setCreditsPerMonth(BigDecimal creditsPerMonth) {
    this.creditsPerMonth = creditsPerMonth;
  }

  public UsageResponse limitationType(Integer limitationType) {
    this.limitationType = limitationType;
    return this;
  }

   /**
   * Determines which usage metric is applied (0 &#x3D; credits, 1 &#x3D; timestamps).
   * @return limitationType
  **/
  @ApiModelProperty(value = "Determines which usage metric is applied (0 = credits, 1 = timestamps).")
  public Integer getLimitationType() {
    return limitationType;
  }

  public void setLimitationType(Integer limitationType) {
    this.limitationType = limitationType;
  }

  public UsageResponse remainingCredits(BigDecimal remainingCredits) {
    this.remainingCredits = remainingCredits;
    return this;
  }

   /**
   * Remaining number of credits for the current month.
   * @return remainingCredits
  **/
  @ApiModelProperty(value = "Remaining number of credits for the current month.")
  public BigDecimal getRemainingCredits() {
    return remainingCredits;
  }

  public void setRemainingCredits(BigDecimal remainingCredits) {
    this.remainingCredits = remainingCredits;
  }

  public UsageResponse timestampsPerMonth(Long timestampsPerMonth) {
    this.timestampsPerMonth = timestampsPerMonth;
    return this;
  }

   /**
   * Total number of timestamps available per month.
   * @return timestampsPerMonth
  **/
  @ApiModelProperty(value = "Total number of timestamps available per month.")
  public Long getTimestampsPerMonth() {
    return timestampsPerMonth;
  }

  public void setTimestampsPerMonth(Long timestampsPerMonth) {
    this.timestampsPerMonth = timestampsPerMonth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageResponse usageResponse = (UsageResponse) o;
    return Objects.equals(this.certificatePerMonth, usageResponse.certificatePerMonth) &&
        Objects.equals(this.consumedCertificates, usageResponse.consumedCertificates) &&
        Objects.equals(this.consumedCredits, usageResponse.consumedCredits) &&
        Objects.equals(this.consumedTimestamps, usageResponse.consumedTimestamps) &&
        Objects.equals(this.creditsPerMonth, usageResponse.creditsPerMonth) &&
        Objects.equals(this.limitationType, usageResponse.limitationType) &&
        Objects.equals(this.remainingCredits, usageResponse.remainingCredits) &&
        Objects.equals(this.timestampsPerMonth, usageResponse.timestampsPerMonth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificatePerMonth, consumedCertificates, consumedCredits, consumedTimestamps, creditsPerMonth, limitationType, remainingCredits, timestampsPerMonth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageResponse {\n");
    
    sb.append("    certificatePerMonth: ").append(toIndentedString(certificatePerMonth)).append("\n");
    sb.append("    consumedCertificates: ").append(toIndentedString(consumedCertificates)).append("\n");
    sb.append("    consumedCredits: ").append(toIndentedString(consumedCredits)).append("\n");
    sb.append("    consumedTimestamps: ").append(toIndentedString(consumedTimestamps)).append("\n");
    sb.append("    creditsPerMonth: ").append(toIndentedString(creditsPerMonth)).append("\n");
    sb.append("    limitationType: ").append(toIndentedString(limitationType)).append("\n");
    sb.append("    remainingCredits: ").append(toIndentedString(remainingCredits)).append("\n");
    sb.append("    timestampsPerMonth: ").append(toIndentedString(timestampsPerMonth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

