/*
 * OriginStamp Client
 *
 * OpenAPI spec version: 3.0
 * OriginStamp Documentation: https://docs.originstamp.com
 * Contact: mail@originstamp.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


package com.originstamp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * response object for a webhook request. Contains only the most recent webhook information for target URL, hash and currency.
 */
@ApiModel(description = "response object for a webhook request. Contains only the most recent webhook information for target URL, hash and currency.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-18T14:06:09.411+01:00")
public class WebhookResponse {
  @SerializedName("currency")
  private Integer currency = null;

  @SerializedName("executed")
  private Boolean executed = null;

  @SerializedName("hash")
  private String hash = null;

  @SerializedName("success")
  private Boolean success = null;

  @SerializedName("tries")
  private Integer tries = null;

  public WebhookResponse currency(Integer currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency for which the webhook is triggered, e.g.  0: Bitcoin 1: Ethereum
   * @return currency
  **/
  @ApiModelProperty(value = "Currency for which the webhook is triggered, e.g.  0: Bitcoin 1: Ethereum")
  public Integer getCurrency() {
    return currency;
  }

  public void setCurrency(Integer currency) {
    this.currency = currency;
  }

  public WebhookResponse executed(Boolean executed) {
    this.executed = executed;
    return this;
  }

   /**
   * Shows if the webhook was executed.
   * @return executed
  **/
  @ApiModelProperty(value = "Shows if the webhook was executed.")
  public Boolean isExecuted() {
    return executed;
  }

  public void setExecuted(Boolean executed) {
    this.executed = executed;
  }

  public WebhookResponse hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * The submitted hash in hex representation.
   * @return hash
  **/
  @ApiModelProperty(value = "The submitted hash in hex representation.")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public WebhookResponse success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * Indicates whether the webhook was executed successfully or not.
   * @return success
  **/
  @ApiModelProperty(value = "Indicates whether the webhook was executed successfully or not.")
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }

  public WebhookResponse tries(Integer tries) {
    this.tries = tries;
    return this;
  }

   /**
   * Returns the number of tries for the webhook execution.
   * @return tries
  **/
  @ApiModelProperty(value = "Returns the number of tries for the webhook execution.")
  public Integer getTries() {
    return tries;
  }

  public void setTries(Integer tries) {
    this.tries = tries;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookResponse webhookResponse = (WebhookResponse) o;
    return Objects.equals(this.currency, webhookResponse.currency) &&
        Objects.equals(this.executed, webhookResponse.executed) &&
        Objects.equals(this.hash, webhookResponse.hash) &&
        Objects.equals(this.success, webhookResponse.success) &&
        Objects.equals(this.tries, webhookResponse.tries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, executed, hash, success, tries);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookResponse {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    executed: ").append(toIndentedString(executed)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    tries: ").append(toIndentedString(tries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

